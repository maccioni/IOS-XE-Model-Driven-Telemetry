[default]
id = pipeline

[gRPCDialout]
stage = xport_input
type = grpc
encap = gpb
listen = :57500
tls = false
logdata = on

#
# For testing only. Remove it in production
#
[inspector]
stage = xport_output
type = tap
file = dump_script.json
encoding = json_events
datachanneldepth = 1000
# change countonly to just count the number of Telemetry packets coming in. 
countonly = false

[metrics_influx]
stage = xport_output
type = metrics                       ## file type to be used to select data to be accepted into the TSDB
file = /root/bigmuddy-network-telemetry-pipeline/metrics.json     ## location of the config file
datachanneldepth = 10000             ## optionally, specify a buffer for the data
output = influx                      ## destination is InfluxDB
influx = http://10.195.183.134:8086  ## address and port of InfluxDB (can be IPv6 as well)
database = mdt_db                    ## the database within InfluxDB (you will have to create it)
workers = 15                         ## a number of threads working internally
dump = metricsdump.txt               ## a local dump file for InfluxDB (remove after initial testing)

#[metrics_prometheus]
#stage = xport_output
#type = metrics                   ## type of the file to be used to select data to be accepted into the TSDB
#file = metrics.json              ## define the location of this file
#datachanneldepth = 10000         ## optionally, specify a buffer for the data
#output = prometheus              ## this is where you specify that the destination is Prometheus
#pushgw = 10.195.183.134:9091     ## address and port of PushGW
#pushgw = 10.195.183.134:9090     ## address and port of PushGW
#jobname = telemetry              ## Specify a jobname to be used
#statsensorcount = 1000           ## must be set for any stats to be exported

#[output_kafka] 
#stage = xport_output
#type = kafka                     ## specify the type of the output
#encoding = json                  ## JSON is used as the encoding
#brokers = 10.195.183.134:32768   ## specify a Kafka broker
#topic = telemetry                ## specify a name of the topic

# Prometheus setup to export metrics about the pipeline.
#metamonitoring_prometheus_resource = /metrics
#metamonitoring_prometheus_server = 10.195.183.134:8989

